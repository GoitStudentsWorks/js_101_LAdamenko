import Swiper from "swiper"; import iziToast from "izitoast"; import "izitoast/dist/css/iziToast.min.css"; import "swiper/css"; import { Navigation, Keyboard, Mousewheel } from "swiper/modules"; import { apiGet } from "./api"; const notFoundMessage = document.querySelector(".not-found"), reviewsList = document.querySelector(".reviews-list"), swiperBlock = document.querySelector(".swiper-container"); function displayToast(e) { iziToast.error({ title: "Error", message: e, position: "topRight" }) } function render(e) { if (0 === e.length) reviewsIsNotFounded(); else { const i = e.map((e => `<li class="reviews-item swiper-slide">\n                <img src="${e.avatar_url}" alt="" width="48" height="48"  class="reviews-avatar"/>\n                <div class="reviews-info">\n                    <h3 class="reviews-name">${e.author}</h3>\n                    <p class="reviews-text">${e.review}</p>\n                </div>\n              </li>`)).join(""); reviewsList.insertAdjacentHTML("beforeend", i), initializeSwiper() } } function reviewsIsNotFounded() { swiperBlock.style.display = "none", notFoundMessage.style.display = "block", displayToast("The connection with the server has problem, so reviews are not rendered") } function checkAndRenderReviews() { apiGet().then((e => { e && e.length > 0 ? render(e) : reviewsIsNotFounded() })).catch((e => { console.error(e), reviewsIsNotFounded() })) } function initializeSwiper() { new Swiper(".swiper-container", { modules: [Navigation, Keyboard, Mousewheel], slidesPerView: 1, breakpoints: { 768: { slidesPerView: 2 }, 1440: { slidesPerView: 4 } }, keyboard: { enabled: !0, onlyInViewport: !0 }, mousewheel: { enabled: !0 }, speed: 800, spaceBetween: 16, allowTouchMove: !0, loop: !1, watchOverflow: !0, slideToClickedSlide: !0, navigation: { nextEl: ".swiper-button-next-reviews", prevEl: ".swiper-button-prev-reviews" } }) } document.addEventListener("DOMContentLoaded", checkAndRenderReviews);



